-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module GraphQLApi.Object.Calendar exposing (..)

import GraphQLApi.InputObject
import GraphQLApi.Interface
import GraphQLApi.Object
import GraphQLApi.Scalar
import GraphQLApi.ScalarCodecs
import GraphQLApi.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


name : SelectionSet String GraphQLApi.Object.Calendar
name =
    Object.selectionForField "String" "name" [] Decode.string


events :
    SelectionSet decodesTo GraphQLApi.Object.Event
    -> SelectionSet (List decodesTo) GraphQLApi.Object.Calendar
events object____ =
    Object.selectionForCompositeField "events" [] object____ (Basics.identity >> Decode.list)
