-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module GraphQLApi.InputObject exposing (..)

import GraphQLApi.Interface
import GraphQLApi.Object
import GraphQLApi.Scalar
import GraphQLApi.ScalarCodecs
import GraphQLApi.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


buildEventInput :
    EventInputRequiredFields
    -> EventInput
buildEventInput required____ =
    { start = required____.start, end = required____.end }


type alias EventInputRequiredFields =
    { start : Int
    , end : Int
    }


{-| Type for the EventInput input object.
-}
type alias EventInput =
    { start : Int
    , end : Int
    }


{-| Encode a EventInput into a value that can be used as an argument.
-}
encodeEventInput : EventInput -> Value
encodeEventInput input____ =
    Encode.maybeObject
        [ ( "start", Encode.int input____.start |> Just ), ( "end", Encode.int input____.end |> Just ) ]
