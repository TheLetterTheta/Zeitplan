#+CAPTION: Logo
[[./Zeitplan.png]]

* AWS Services
** TODO S3
** TODO X-Ray
** TODO Cloudfront

#+begin_src plantuml :noweb :file AWS-Checkout Process
@startuml

!theme superhero-outline

!include <awslib/AWSCommon.puml>
!include <awslib/DeveloperTools/XRay.puml>
!include <awslib/SecurityIdentityAndCompliance/Cognito.puml>
!include <awslib/Compute/Lambda.puml>
!include <awslib/Database/DynamoDB.puml>
!include <awslib/General/Client.puml>
!include <logos/stripe>

title AWS Login Sequence

ClientParticipant(frontend, "Elm App", "Checkout")
LambdaParticipant(lambda, "Begin Checkout", "")
DynamoDBParticipant(db, "Users Table", "")
entity "<$stripe>" as stripe

frontend -> cognito: Login Request
cognito -> frontend: Failed Request
cognito -> frontend: Successful Request
note left: $success("Successful request")
lambda -> db: Query user and subscription
db --> lambda: User and subscription info
opt $failure("User does not exist")
  db --> lambda: Not Found
  lambda -> stripe: Create Customer Request
  stripe --> lambda: New Subscription info
end
lambda --> cognito: User and subscription info
cognito --> frontend: Logged in with subscription info

@enduml
#+end_src

#+RESULTS:
[[file:AWS-Login Sequence.svg]]

#+begin_src plantuml :noweb :file Stripe Subscription Sequence.svg
@startuml
!theme superhero-outline

!include <awslib/AWSCommon.puml>
!include <awslib/DeveloperTools/XRay.puml>
!include <awslib/SecurityIdentityAndCompliance/Cognito.puml>
!include <awslib/Compute/Lambda.puml>
!include <awslib/Database/DynamoDB.puml>
!include <awslib/General/Client.puml>
!include <awslib/ApplicationIntegration/APIGateway.puml>
!include <awslib/General/Internet.puml>

ClientParticipant(frontend, "Elm App", "")
InternetParticipant(stripe, "Stripe", "")
APIGatewayParticipant(api, "Zeitplan API", "")
DynamoDBParticipant(db, "Zeitplan DB", "")

== New User Process ==
frontend -> api: Login
api --> frontend: New User
frontend -> stripe: Create subscription
stripe --> frontend: Updated subscription

== Stripe -> Lambda Integration ==
stripe -> api: User updated subscription
api -> db: Update user subscription status

@enduml
#+end_src

#+RESULTS:
[[file:Stripe Subscription Sequence.svg]]
